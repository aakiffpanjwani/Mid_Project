[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "STAT515-Mid Project",
    "section": "",
    "text": "Hi everyone, My name is Aakiff Panjwani and this is my STAT 515 Mid Project. I have chosen a visual from the web which I found particularly very interesting. It is a visualization which shows the total points accumulated by Charles Leclerc, who is a professional Formula 1 driver and he drives for Ferrari. The visual is a horizontal bar graph which has many problems. The length of the bars is not proportional to the points. Although, the bars are proportional in length, but from the start of the car. This means that the car is distorting the bar length and making the visual hard to interpret.\n\n\n\nOriginal Viz.\n\n\nAs the data contains points secured and by year, the best way to visualize such data is to plot vertical bar graphs, area charts and line graphs. These will certainly help us the visualize the data better and generate meaningful insights from it. The first task in any data visualization is to collect the data and clean it, so that it is ready for analysis. I tried to find the data and tried to scrape it, but it is not available anywhere on the internet. So using the visualization, I have curated my own dataset and saved it as a csv file format for further analysis using Microsoft Excel and R.\nAfter obtaining the data, I have plotted two interactive graphs using ggplot which I feel, are a significant improvement over the original. These are less flashy, but they give out the right information about what is actually going on and bring out the true essense of the data and Leclerc’s performances\n\n\n\n\n\nFrom the above plot, you can clearly see how the points were scored year after year.\nFor the second visualization, I feel that a line graph would be perfect to get much more insights about the performance over the years.\n\n\n\n\n\nThe above line graph clearly shows that Charles was exceptional in 2022 and a little slow in the next year of 2023. As you might know, there are two drivers for every team in Formula 1, and the other driver for Ferrari is Carlos Sainz. To compare both their performances, I have collected additional data about Sainz too, using the internet.\n\n\n\n\n\nTo visualize the performance using line graps just as with Charles,\n\n\n\n\n\nlink for the original visualization: https://www.codeconquest.com/blog/12-bad-data-visualization-examples-explained/"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "The Code",
    "section": "",
    "text": "library(ggplot2) library(plotly)\ndata &lt;- read.csv(‘leclerc.csv’) data2 &lt;- read.csv(‘sainz.csv’)\nggplot(data, aes(x = Year, y = Points)) + geom_bar(stat = “identity”, fill = “red”, width = 0.6) + geom_text(aes(label = Points), vjust = -0.5, color = “black”, size = 5, fontface = ‘bold’) + labs(x = “Year”, y = “Points”, title = “Leclerc Points after first 3 Races”) + theme_bw() + theme(plot.title = element_text(hjust = 0.5, face = ‘bold’)) + scale_y_continuous(breaks = seq(0, 100, by = 5)) + theme(plot.title = element_text(hjust = 0.5, face = “bold”), axis.text.x = element_text(color = “#6a0dad”, size = 12, angle = 45, hjust = 1), # X-axis text color and angle axis.text.y = element_text(color = “#6a0dad”, size = 12), # Y-axis text color axis.title = element_text(color = “#6a0dad”, size = 14), # Axis title color and size panel.background = element_rect(fill = “#f5f0f5”)) # Background color\nggplot(data, aes(x = Year)) + geom_line(aes(y = Points, color = “Line”)) + # Line plot geom_bar(aes(y = Points, fill = “Bar”), stat = “identity”, width = 0.5, color = “red”) + # Bar plot scale_fill_manual(values = “red”) + # Bar color scale_color_manual(values = “#6a0dad”) + # Line color geom_text(aes(y = Points, label = Points), vjust = -0.5, size = 4, fontface = “bold”, color = “black”) + # Add counts on top of the bars with bold font and increased size labs(x = “Year”, y = “Points”, title = “Leclerc Points after first 3 Races”) + theme_minimal() + theme(plot.title = element_text(hjust = 0.5, face = “bold”), axis.text.x = element_text(size = 12, angle = 45, hjust = 1), # X-axis text size and angle axis.text.y = element_text(size = 12), # Y-axis text size axis.title = element_text(size = 14), # Axis title size panel.background = element_rect(fill = “#f5f0f5”)) # Background color\nggplot(data2, aes(x = Year, y = Points)) + geom_bar(stat = “identity”, fill = “red”, width = 0.6) + geom_text(aes(label = Points), vjust = -0.5, color = “black”, size = 5, fontface = ‘bold’) + labs(x = “Year”, y = “Points”, title = “Sainz Points after first 3 Races”) + theme_bw() + theme(plot.title = element_text(hjust = 0.5, face = ‘bold’)) + scale_y_continuous(breaks = seq(0, 100, by = 5)) + theme(plot.title = element_text(hjust = 0.5, face = “bold”), axis.text.x = element_text(color = “#6a0dad”, size = 12, angle = 45, hjust = 1), # X-axis text color and angle axis.text.y = element_text(color = “#6a0dad”, size = 12), # Y-axis text color axis.title = element_text(color = “#6a0dad”, size = 14), # Axis title color and size panel.background = element_rect(fill = “#f5f0f5”)) # Background color\nggplot(data3, aes(x = Year)) + geom_line(aes(y = Points, color = “Line”)) + # Line plot geom_bar(aes(y = Points, fill = “Bar”), stat = “identity”, width = 0.5, color = “red”) + # Bar plot scale_fill_manual(values = “red”) + # Bar color scale_color_manual(values = “#6a0dad”) + # Line color geom_text(aes(y = Points, label = Points), vjust = -0.5, size = 4, fontface = “bold”, color = “black”) + # Add counts on top of the bars with bold font and increased size labs(x = “Year”, y = “Points”, title = “Sainz Points after first 3 Races”) + theme_minimal() + theme(plot.title = element_text(hjust = 0.5, face = “bold”), axis.text.x = element_text(size = 12, angle = 45, hjust = 1), # X-axis text size and angle axis.text.y = element_text(size = 12), # Y-axis text size axis.title = element_text(size = 14), # Axis title size panel.background = element_rect(fill = “#f5f0f5”)) # Background color"
  },
  {
    "objectID": "code.html",
    "href": "code.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "VideoLink.html",
    "href": "VideoLink.html",
    "title": "Video Presentation Link",
    "section": "",
    "text": "https://youtu.be/-PZymPxkRKA"
  }
]